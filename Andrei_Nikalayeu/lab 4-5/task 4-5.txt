Вариант 8.

Клиент заполняет заявку, указывая количество мест в номере, класс апартаментов и время пребывания.

Администратор просматривает поступившую заявку, выделяет наиболее подходящий из доступных номеров, 
после чего система выставляет счет Клиенту.


Требования к проекту

Task 4 Разработать подсистему для работы с базой данных предложенной предметной области:

     1) Разработать схему базы данных в соответствии с предметной областью вашего варианта. 
	Создать sql-скрипты создания БД, пользователя БД, создание таблиц, заполнение таблиц, 
	удаление данных, удаление таблиц, удаление БД, обновление данных, запросы на выборку данных.

     2) Информацию о предметной области хранить в БД, для доступа использовать API JDBC с использованием пула соединений, 
	разработанного самостоятельно. В качестве СУБД используется MySQL.

     3) На основе сущностей предметной области создать классы их описывающие.

     4) Классы и методы должны иметь отражающую их функциональность названия и должны быть грамотно 
	структурированы по пакетам.

     5) Оформление кода должно соответствовать Java Code Convention.

     6) Приложение должно поддерживать работу с кириллицей (быть многоязычной), в том числе и при хранении информации в БД.

     7) Выполнить журналирование событий, то есть информацию о возникающих исключениях и событиях в системе 
	обрабатывать с помощью Log4j 2.

     8) Код должен содержать комментарии.



Task 5 Построить веб-систему (для предметной области в соответствии с вариантом task 4), поддерживающую заданную функциональность:

     1) Интерфейс приложения должен поддерживать работу с кириллицей (быть многоязычной).

     2) Архитектура приложения должна соответствовать шаблону Model-View-Controller.

     3) При реализации алгоритмов бизнес-логики использовать шаблоны GoF: Factory Method, Command, Builder, Strategy, 
	State, Observer etc.

     5) Используя сервлеты и JSP, реализовать функциональности, предложенные в постановке конкретной задачи.

     6) В страницах JSP применять библиотеку JSTL и разработать собственные теги.

     7) При разработке бизнес логики использовать сессии и фильтры.

     8) Код должен содержать комментарии.

